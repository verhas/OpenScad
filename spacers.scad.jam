mm = 1;
cm = 10 * mm;
width = 10 * mm;
length = 8 * cm;
letterSize = 4 * mm;
letterEngraving = 0.2 * mm;
spacerGap = 0.5*mm;
d = 0.1;

module spacer(height, n) {
    translate([n*(width + spacerGap), 0, 0])
    difference() {
        translate([0, 0, height / 2])
            cube([width, length, height], center = true);
        translate([0, 0, height - letterEngraving])
            rotate([0, 0, 90])
                linear_extrude(height = letterEngraving + d)
                    text(str(height, "mm"), size = letterSize, halign="center", valign="center"); }
}

spacers = [1, 2, 4, 5, 8, 10, 15];

for( i = [0 : len(spacers) - 1]){
    spacer(spacers[i], i);
    }

{%@do
<<"boxWidth = spacers[0] "
for i=1 to 6
<<"+ spacers[" + i + "]"
next
%}+ 2*mm;

boxLength = length + 0.5 * mm;

echo(str("Box width:" , boxWidth));
echo(str("Box length:" , boxLength));

wall = 2*mm;
translate([-boxWidth+10,0, 0]){
    union(){
        // baseplate of the holding box
        translate([0,0,wall/2])
            cube([boxWidth+2*wall, boxLength+2*wall, wall], center = true);
        // walls of the holding box
        translate([0,boxLength / 2 + wall/2,width/2+wall])
            cube([boxWidth+2*wall, wall, width], center = true);
        translate([0,-boxLength / 2 - wall/2,width/2+wall])
            cube([boxWidth+2*wall, wall, width], center = true);
        translate([boxWidth/2 + wall / 2, 0, width/2+wall])
                cube([wall, boxLength+2*wall, width], center = true);
        translate([-boxWidth/2 - wall / 2, 0, width/2+wall])
                cube([wall, boxLength+2*wall, width], center = true);
    }
}